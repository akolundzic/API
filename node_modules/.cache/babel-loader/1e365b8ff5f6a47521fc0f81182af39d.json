{"ast":null,"code":"var _jsxFileName = \"/home/chinchi42/Desktop/API/src/components/GetData.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GetData = _ref => {\n  _s();\n\n  let {\n    id\n  } = _ref;\n  // await axios.get(url, { params: { answer: 42 } });\n  // url?params=answer, example: ...search?query=story\n  const [item, setItem] = useState([]);\n  const [query, setQuery] = useState(id);\n  let date = new Date();\n\n  const format = require(\"dateformat\");\n\n  useEffect(() => {\n    const fetchdata = () => {\n      if (!query) {\n        setQuery(\"story\");\n      }\n\n      try {\n        console.log();\n        const res = axios({\n          url: \"http://hn.algolia.com/api/v1/search\",\n          method: \"get\",\n          timeout: 1000,\n          params: {\n            query: {\n              query\n            }\n          },\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        res.then(response => response.data).then(data => {\n          setItem(data.hits); // setMaintitle(data.hits[0]);\n        });\n      } catch (err) {\n        if (err.response) {\n          console.log(\"Error: \" + err.message);\n        }\n      }\n    };\n\n    fetchdata(); // setTimeout(() => {\n    //   console.log(\"This will run after 1 second!\");\n    // }, 1000);\n  }, []); // console.log(item);\n  //item[i].author,item[i].title,item[i].num_comments,item[i].point\n  //date: format(new Date(item[i].created_at),'dd MMMM yyyy');\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: item.map(_ref2 => {\n      let {\n        author,\n        created_at,\n        title,\n        objectId,\n        url\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"ul\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"posted by \", author]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"on \", format(date, \"dd MMMM yyyy\"), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: url,\n              target: \"_blank\",\n              children: \"go to Article\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, objectId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GetData, \"hcAFtkKE8xRZWttN5pLm+4Vx1Mk=\");\n\n_c = GetData;\nexport default GetData;\n{\n  /* // item.maps({ Id, author, created_at, title,num_comments, points })=>{ */\n}\n{\n  /* // <div key={Id}>\n    // <div id=\"ul\">\n      \n    //     <h4>{title}</h4>\n    //     <ul>\n    //       <li>{points} points by</li>{item[0].points}\n    //       <li>by {author}</li>\n    //       <li>with {num_comments}</li>\n    //       <li>on {created_at}</li>\n    //     </ul>\n    //   </div>\n    // </div>\n    // } */\n}\n{\n  /* <div>\n        {item ? (\n          item.map((i) => {\n            <div>\n              <div>\n                <h4>{i.title}</h4>\n                <ul>\n                  <li>{i.points} points by</li>\n                  <li>by {i.author}</li>\n                  <li>with {i.num_comments}</li>\n                  <li>on {i.created_at}</li>\n                </ul>\n              </div>\n            </div>;\n          })\n        ) : (\n          <h2>Loading...</h2>\n        )} */\n}\n{\n  /* </div>  */\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"GetData\");","map":{"version":3,"names":["React","useEffect","useState","axios","GetData","id","item","setItem","query","setQuery","date","Date","format","require","fetchdata","console","log","res","url","method","timeout","params","headers","then","response","data","hits","err","message","map","author","created_at","title","objectId"],"sources":["/home/chinchi42/Desktop/API/src/components/GetData.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nconst GetData = ({ id }) => {\n  // await axios.get(url, { params: { answer: 42 } });\n  // url?params=answer, example: ...search?query=story\n  const [item, setItem] = useState([]);\n  const [query, setQuery] = useState(id);\n  let date = new Date();\n  const format = require(\"dateformat\");\n\n  useEffect(() => {\n    const fetchdata = () => {\n      if (!query) {\n        setQuery(\"story\");\n      }\n      try {\n        console.log();\n        const res = axios({\n          url: \"http://hn.algolia.com/api/v1/search\",\n          method: \"get\",\n          timeout: 1000,\n          params: { query: { query } },\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        });\n        res\n          .then((response) => response.data)\n          .then((data) => {\n            setItem(data.hits);\n            // setMaintitle(data.hits[0]);\n          });\n      } catch (err) {\n        if (err.response) {\n          console.log(\"Error: \" + err.message);\n        }\n      }\n    };\n    fetchdata();\n    // setTimeout(() => {\n    //   console.log(\"This will run after 1 second!\");\n    // }, 1000);\n  }, []);\n  // console.log(item);\n  //item[i].author,item[i].title,item[i].num_comments,item[i].point\n  //date: format(new Date(item[i].created_at),'dd MMMM yyyy');\n  return (\n    <div>\n      {item.map(({ author, created_at, title, objectId, url }) => (\n        <div key={objectId} id=\"ul\">\n          <h4>{title}</h4>\n          <ul>\n            <li>posted by {author}</li>\n            <li>on {format(date, \"dd MMMM yyyy\")} </li>\n            <li>\n              <a href={url} target=\"_blank\">\n                go to Article\n              </a>\n            </li>\n          </ul>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default GetData;\n{\n  /* // item.maps({ Id, author, created_at, title,num_comments, points })=>{ */\n}\n{\n  /* // <div key={Id}>\n    // <div id=\"ul\">\n      \n    //     <h4>{title}</h4>\n    //     <ul>\n    //       <li>{points} points by</li>{item[0].points}\n    //       <li>by {author}</li>\n    //       <li>with {num_comments}</li>\n    //       <li>on {created_at}</li>\n    //     </ul>\n    //   </div>\n    // </div>\n    // } */\n}\n{\n  /* <div>\n        {item ? (\n          item.map((i) => {\n            <div>\n              <div>\n                <h4>{i.title}</h4>\n                <ul>\n                  <li>{i.points} points by</li>\n                  <li>by {i.author}</li>\n                  <li>with {i.num_comments}</li>\n                  <li>on {i.created_at}</li>\n                </ul>\n              </div>\n            </div>;\n          })\n        ) : (\n          <h2>Loading...</h2>\n        )} */\n}\n{\n  /* </div>  */\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,OAAO,GAAG,QAAY;EAAA;;EAAA,IAAX;IAAEC;EAAF,CAAW;EAC1B;EACA;EACA,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAACG,EAAD,CAAlC;EACA,IAAIK,IAAI,GAAG,IAAIC,IAAJ,EAAX;;EACA,MAAMC,MAAM,GAAGC,OAAO,CAAC,YAAD,CAAtB;;EAEAZ,SAAS,CAAC,MAAM;IACd,MAAMa,SAAS,GAAG,MAAM;MACtB,IAAI,CAACN,KAAL,EAAY;QACVC,QAAQ,CAAC,OAAD,CAAR;MACD;;MACD,IAAI;QACFM,OAAO,CAACC,GAAR;QACA,MAAMC,GAAG,GAAGd,KAAK,CAAC;UAChBe,GAAG,EAAE,qCADW;UAEhBC,MAAM,EAAE,KAFQ;UAGhBC,OAAO,EAAE,IAHO;UAIhBC,MAAM,EAAE;YAAEb,KAAK,EAAE;cAAEA;YAAF;UAAT,CAJQ;UAKhBc,OAAO,EAAE;YACP,gBAAgB;UADT;QALO,CAAD,CAAjB;QASAL,GAAG,CACAM,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAD/B,EAEGF,IAFH,CAESE,IAAD,IAAU;UACdlB,OAAO,CAACkB,IAAI,CAACC,IAAN,CAAP,CADc,CAEd;QACD,CALH;MAMD,CAjBD,CAiBE,OAAOC,GAAP,EAAY;QACZ,IAAIA,GAAG,CAACH,QAAR,EAAkB;UAChBT,OAAO,CAACC,GAAR,CAAY,YAAYW,GAAG,CAACC,OAA5B;QACD;MACF;IACF,CA1BD;;IA2BAd,SAAS,GA5BK,CA6Bd;IACA;IACA;EACD,CAhCQ,EAgCN,EAhCM,CAAT,CAR0B,CAyC1B;EACA;EACA;;EACA,oBACE;IAAA,UACGR,IAAI,CAACuB,GAAL,CAAS;MAAA,IAAC;QAAEC,MAAF;QAAUC,UAAV;QAAsBC,KAAtB;QAA6BC,QAA7B;QAAuCf;MAAvC,CAAD;MAAA,oBACR;QAAoB,EAAE,EAAC,IAAvB;QAAA,wBACE;UAAA,UAAKc;QAAL;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAA,wBACE;YAAA,yBAAeF,MAAf;UAAA;YAAA;YAAA;YAAA;UAAA,QADF,eAEE;YAAA,kBAAQlB,MAAM,CAACF,IAAD,EAAO,cAAP,CAAd;UAAA;YAAA;YAAA;YAAA;UAAA,QAFF,eAGE;YAAA,uBACE;cAAG,IAAI,EAAEQ,GAAT;cAAc,MAAM,EAAC,QAArB;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UADF;YAAA;YAAA;YAAA;UAAA,QAHF;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA,GAAUe,QAAV;QAAA;QAAA;QAAA;MAAA,QADQ;IAAA,CAAT;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAkBD,CA9DD;;GAAM7B,O;;KAAAA,O;AAgEN,eAAeA,OAAf;AACA;EACE;AACD;AACD;EACE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC;AACD;EACE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC;AACD;EACE;AACD"},"metadata":{},"sourceType":"module"}